{"ast":null,"code":"import _regeneratorRuntime from \"/home/runner/HackyBirthdayMLH/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/runner/HackyBirthdayMLH/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/runner/HackyBirthdayMLH/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/runner/HackyBirthdayMLH/src/components/misc/TutorCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport firebase from \"firebase\";\nimport { Alert, Form, FormControl, Container } from \"react-bootstrap\";\nimport ERROR_TIMEOUT_SECONDS from \"../../config.js\";\nimport '../../styles/universal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TutorCard(_ref) {\n  _s();\n\n  var uid = _ref.uid,\n      imgSrc = _ref.imgSrc,\n      name = _ref.name,\n      email = _ref.email,\n      gradeLevel = _ref.gradeLevel,\n      _ref$active = _ref.active,\n      active = _ref$active === void 0 ? true : _ref$active;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  function _onClick() {\n    return _onClick2.apply(this, arguments);\n  }\n\n  function _onClick2() {\n    _onClick2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _uid, studentInfo, teacherInfo, classes, students, db, flag;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Tutor UID\n              // Student UID\n              _uid = firebase.auth().currentUser.uid; // Variables to populate\n\n              studentInfo = null;\n              teacherInfo = null;\n              classes = null;\n              students = null; // Gets student info\n\n              _context.next = 7;\n              return firebase.firestore().collection(\"students\").doc(_uid).get().then(function (doc) {\n                return doc.data();\n              }).then(function (data) {\n                studentInfo = data;\n              });\n\n            case 7:\n              _context.next = 9;\n              return firebase.firestore().collection(\"tutors\").doc(uid).get().then(function (doc) {\n                return doc.data();\n              }).then(function (data) {\n                teacherInfo = data;\n              });\n\n            case 9:\n              _context.next = 11;\n              return firebase.firestore();\n\n            case 11:\n              db = _context.sent;\n              flag = false; // Checks if student is already enrolled in course\n\n              _context.next = 15;\n              return teacherInfo.students.forEach(function (student) {\n                if (student.name === studentInfo.name) {\n                  setMessage(\"You are already enrolled in this course\");\n                  flag = true;\n                  setTimeout(function () {\n                    return setMessage(null);\n                  }, ERROR_TIMEOUT_SECONDS * 1000);\n                }\n              });\n\n            case 15:\n              if (flag) {\n                _context.next = 23;\n                break;\n              }\n\n              teacherInfo.capacity += 1;\n              studentInfo.classes.push({\n                name: teacherInfo.name,\n                email: teacherInfo.email,\n                grade: teacherInfo.grade,\n                uid: teacherInfo.uid,\n                subject: teacherInfo.subjects\n              });\n              teacherInfo.students.push({\n                name: studentInfo.name,\n                grade: studentInfo.grade,\n                email: studentInfo.email,\n                uid: _uid\n              });\n              _context.next = 21;\n              return db.collection(\"tutors\").doc(teacherInfo.uid).set(teacherInfo);\n\n            case 21:\n              _context.next = 23;\n              return db.collection(\"students\").doc(_uid).set(studentInfo);\n\n            case 23:\n              console.log(studentInfo);\n              console.log(teacherInfo);\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onClick2.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\",\n        height: \"24rem\",\n        margin: \"2em auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        style: {\n          height: \"75%\",\n          borderRadius: \"25%\"\n        },\n        src: imgSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          style: {\n            padding: 10\n          },\n          children: [\"Teaching \", gradeLevel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          style: {\n            padding: 5\n          },\n          children: [\"Contact \", name, \" at \", email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          opacity: \"\".concat(active ? 1 : 0)\n        },\n        onClick: _onClick,\n        children: [\"Enroll with \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        style: {\n          opacity: message ? 1 : 0\n        },\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TutorCard, \"oxT8SEz5FIjvFP5ix50Ku0sapH4=\");\n\n_c = TutorCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TutorCard\");","map":{"version":3,"sources":["/home/runner/HackyBirthdayMLH/src/components/misc/TutorCard.js"],"names":["React","useState","Card","Button","firebase","Alert","Form","FormControl","Container","ERROR_TIMEOUT_SECONDS","TutorCard","uid","imgSrc","name","email","gradeLevel","active","message","setMessage","_onClick","_uid","auth","currentUser","studentInfo","teacherInfo","classes","students","firestore","collection","doc","get","then","data","db","flag","forEach","student","setTimeout","capacity","push","grade","subject","subjects","set","console","log","width","height","margin","borderRadius","padding","opacity"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport firebase from \"firebase\";\nimport { Alert, Form, FormControl, Container } from \"react-bootstrap\";\nimport ERROR_TIMEOUT_SECONDS from \"../../config.js\";\nimport '../../styles/universal.css';\n\nexport default function TutorCard({\n  uid,\n  imgSrc,\n  name,\n  email,\n  gradeLevel,\n  active = true\n}) {\n  const [message, setMessage] = useState(null);\n\n  async function _onClick() {\n    // Tutor UID\n    // Student UID\n    const _uid = firebase.auth().currentUser.uid;\n    // Variables to populate\n    var studentInfo = null;\n    var teacherInfo = null;\n    var classes = null;\n    var students = null;\n\n    // Gets student info\n    await firebase\n      .firestore()\n      .collection(\"students\")\n      .doc(_uid)\n      .get()\n      .then((doc) => doc.data())\n      .then((data) => {\n        studentInfo = data;\n      });\n\n    // Gets tutor info\n    await firebase\n      .firestore()\n      .collection(\"tutors\")\n      .doc(uid)\n      .get()\n      .then((doc) => doc.data())\n      .then((data) => {\n        teacherInfo = data;\n      });\n\n    var db = await firebase.firestore();\n\n    let flag = false;\n    // Checks if student is already enrolled in course\n    await teacherInfo.students.forEach((student) => {\n      if (student.name === studentInfo.name) {\n        setMessage(\"You are already enrolled in this course\");\n        flag = true;\n        setTimeout(() => setMessage(null), ERROR_TIMEOUT_SECONDS * 1000);\n      }\n    });\n\n    // Need to show alert if capacity for teacher is reached\n\n    if (!flag) {\n      teacherInfo.capacity += 1;\n\n      studentInfo.classes.push({\n        name: teacherInfo.name,\n        email: teacherInfo.email,\n        grade: teacherInfo.grade,\n        uid: teacherInfo.uid,\n        subject: teacherInfo.subjects\n      });\n      teacherInfo.students.push({\n        name: studentInfo.name,\n        grade: studentInfo.grade,\n        email: studentInfo.email,\n        uid: _uid\n      });\n\n      await db.collection(\"tutors\").doc(teacherInfo.uid).set(teacherInfo);\n      await db.collection(\"students\").doc(_uid).set(studentInfo);\n    }\n    console.log(studentInfo);\n    console.log(teacherInfo);\n  }\n  return (\n    <React.Fragment>\n      <Card style={{ width: \"18rem\", height: \"24rem\", margin: \"2em auto\" }}>\n        <Card.Img style={{ height: \"75%\", borderRadius: \"25%\" }} src={imgSrc} />\n        <Card.Body>\n          <Card.Title>{name}</Card.Title>\n          <Card.Subtitle style={{ padding: 10 }}>\n            Teaching {gradeLevel}\n          </Card.Subtitle>\n\n          <Card.Subtitle style={{ padding: 5 }}>\n            Contact {name} at {email}\n          </Card.Subtitle>\n        </Card.Body>\n        <Button style={{ opacity: `${active ? 1 : 0}` }} onClick={_onClick}>\n          Enroll with {name}\n        </Button>\n      </Card>\n      <Container>\n        <Alert style={{ opacity: message ? 1 : 0 }} variant=\"danger\">\n          {message}\n        </Alert>\n      </Container>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}